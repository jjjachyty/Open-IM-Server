// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.3
// source: live/live.proto

package live

import (
	sdk_ws "Open_IM/pkg/proto/sdk_ws"
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int32  `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *CommonResp) Reset() {
	*x = CommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_live_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResp) ProtoMessage() {}

func (x *CommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_live_live_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResp.ProtoReflect.Descriptor instead.
func (*CommonResp) Descriptor() ([]byte, []int) {
	return file_live_live_proto_rawDescGZIP(), []int{0}
}

func (x *CommonResp) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *CommonResp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type LiveUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   int64  `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	NickName string `protobuf:"bytes,2,opt,name=nickName,proto3" json:"nickName,omitempty"`
	FaceURL  string `protobuf:"bytes,3,opt,name=faceURL,proto3" json:"faceURL,omitempty"`
	Role     int32  `protobuf:"varint,4,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *LiveUserInfo) Reset() {
	*x = LiveUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_live_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveUserInfo) ProtoMessage() {}

func (x *LiveUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_live_live_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveUserInfo.ProtoReflect.Descriptor instead.
func (*LiveUserInfo) Descriptor() ([]byte, []int) {
	return file_live_live_proto_rawDescGZIP(), []int{1}
}

func (x *LiveUserInfo) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *LiveUserInfo) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *LiveUserInfo) GetFaceURL() string {
	if x != nil {
		return x.FaceURL
	}
	return ""
}

func (x *LiveUserInfo) GetRole() int32 {
	if x != nil {
		return x.Role
	}
	return 0
}

type JoinRoomReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID,omitempty"`
	ChannelID   int64  `protobuf:"varint,2,opt,name=channelID,proto3" json:"channelID,omitempty"`
	UserID      int64  `protobuf:"varint,3,opt,name=userID,proto3" json:"userID,omitempty"`
	NickName    string `protobuf:"bytes,4,opt,name=nickName,proto3" json:"nickName,omitempty"`
	FaceURL     string `protobuf:"bytes,5,opt,name=faceURL,proto3" json:"faceURL,omitempty"`
}

func (x *JoinRoomReq) Reset() {
	*x = JoinRoomReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_live_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinRoomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRoomReq) ProtoMessage() {}

func (x *JoinRoomReq) ProtoReflect() protoreflect.Message {
	mi := &file_live_live_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRoomReq.ProtoReflect.Descriptor instead.
func (*JoinRoomReq) Descriptor() ([]byte, []int) {
	return file_live_live_proto_rawDescGZIP(), []int{2}
}

func (x *JoinRoomReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *JoinRoomReq) GetChannelID() int64 {
	if x != nil {
		return x.ChannelID
	}
	return 0
}

func (x *JoinRoomReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *JoinRoomReq) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *JoinRoomReq) GetFaceURL() string {
	if x != nil {
		return x.FaceURL
	}
	return ""
}

type JoinRoomResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp      `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	UserLive   *sdk_ws.UserLive `protobuf:"bytes,2,opt,name=userLive,proto3" json:"userLive,omitempty"`
	Owner      *LiveUserInfo    `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *JoinRoomResp) Reset() {
	*x = JoinRoomResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_live_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinRoomResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRoomResp) ProtoMessage() {}

func (x *JoinRoomResp) ProtoReflect() protoreflect.Message {
	mi := &file_live_live_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRoomResp.ProtoReflect.Descriptor instead.
func (*JoinRoomResp) Descriptor() ([]byte, []int) {
	return file_live_live_proto_rawDescGZIP(), []int{3}
}

func (x *JoinRoomResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *JoinRoomResp) GetUserLive() *sdk_ws.UserLive {
	if x != nil {
		return x.UserLive
	}
	return nil
}

func (x *JoinRoomResp) GetOwner() *LiveUserInfo {
	if x != nil {
		return x.Owner
	}
	return nil
}

type LeveRoomReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID,omitempty"`
	ChannelID   int64  `protobuf:"varint,2,opt,name=channelID,proto3" json:"channelID,omitempty"`
	UserID      int64  `protobuf:"varint,3,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *LeveRoomReq) Reset() {
	*x = LeveRoomReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_live_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeveRoomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeveRoomReq) ProtoMessage() {}

func (x *LeveRoomReq) ProtoReflect() protoreflect.Message {
	mi := &file_live_live_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeveRoomReq.ProtoReflect.Descriptor instead.
func (*LeveRoomReq) Descriptor() ([]byte, []int) {
	return file_live_live_proto_rawDescGZIP(), []int{4}
}

func (x *LeveRoomReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *LeveRoomReq) GetChannelID() int64 {
	if x != nil {
		return x.ChannelID
	}
	return 0
}

func (x *LeveRoomReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type GetRoomUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID,omitempty"`
	ChannelID   int64  `protobuf:"varint,2,opt,name=channelID,proto3" json:"channelID,omitempty"`
}

func (x *GetRoomUserReq) Reset() {
	*x = GetRoomUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_live_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomUserReq) ProtoMessage() {}

func (x *GetRoomUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_live_live_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomUserReq.ProtoReflect.Descriptor instead.
func (*GetRoomUserReq) Descriptor() ([]byte, []int) {
	return file_live_live_proto_rawDescGZIP(), []int{5}
}

func (x *GetRoomUserReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetRoomUserReq) GetChannelID() int64 {
	if x != nil {
		return x.ChannelID
	}
	return 0
}

type GetRoomUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp     `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	Users      []*LiveUserInfo `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *GetRoomUserResp) Reset() {
	*x = GetRoomUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_live_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomUserResp) ProtoMessage() {}

func (x *GetRoomUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_live_live_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomUserResp.ProtoReflect.Descriptor instead.
func (*GetRoomUserResp) Descriptor() ([]byte, []int) {
	return file_live_live_proto_rawDescGZIP(), []int{6}
}

func (x *GetRoomUserResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetRoomUserResp) GetUsers() []*LiveUserInfo {
	if x != nil {
		return x.Users
	}
	return nil
}

type LeveRoomResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *LeveRoomResp) Reset() {
	*x = LeveRoomResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_live_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeveRoomResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeveRoomResp) ProtoMessage() {}

func (x *LeveRoomResp) ProtoReflect() protoreflect.Message {
	mi := &file_live_live_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeveRoomResp.ProtoReflect.Descriptor instead.
func (*LeveRoomResp) Descriptor() ([]byte, []int) {
	return file_live_live_proto_rawDescGZIP(), []int{7}
}

func (x *LeveRoomResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetLiveByUserIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID,omitempty"`
	UserID      string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *GetLiveByUserIDReq) Reset() {
	*x = GetLiveByUserIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_live_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiveByUserIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiveByUserIDReq) ProtoMessage() {}

func (x *GetLiveByUserIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_live_live_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiveByUserIDReq.ProtoReflect.Descriptor instead.
func (*GetLiveByUserIDReq) Descriptor() ([]byte, []int) {
	return file_live_live_proto_rawDescGZIP(), []int{8}
}

func (x *GetLiveByUserIDReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetLiveByUserIDReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type CloseLiveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID,omitempty"`
	UserID      int64  `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	ChannelID   int64  `protobuf:"varint,3,opt,name=channelID,proto3" json:"channelID,omitempty"`
}

func (x *CloseLiveReq) Reset() {
	*x = CloseLiveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_live_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseLiveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseLiveReq) ProtoMessage() {}

func (x *CloseLiveReq) ProtoReflect() protoreflect.Message {
	mi := &file_live_live_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseLiveReq.ProtoReflect.Descriptor instead.
func (*CloseLiveReq) Descriptor() ([]byte, []int) {
	return file_live_live_proto_rawDescGZIP(), []int{9}
}

func (x *CloseLiveReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *CloseLiveReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *CloseLiveReq) GetChannelID() int64 {
	if x != nil {
		return x.ChannelID
	}
	return 0
}

type CloseLiveResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *CloseLiveResp) Reset() {
	*x = CloseLiveResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_live_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseLiveResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseLiveResp) ProtoMessage() {}

func (x *CloseLiveResp) ProtoReflect() protoreflect.Message {
	mi := &file_live_live_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseLiveResp.ProtoReflect.Descriptor instead.
func (*CloseLiveResp) Descriptor() ([]byte, []int) {
	return file_live_live_proto_rawDescGZIP(), []int{10}
}

func (x *CloseLiveResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetLiveByUserIDResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp      `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	UserLive   *sdk_ws.UserLive `protobuf:"bytes,2,opt,name=userLive,proto3" json:"userLive,omitempty"`
}

func (x *GetLiveByUserIDResp) Reset() {
	*x = GetLiveByUserIDResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_live_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiveByUserIDResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiveByUserIDResp) ProtoMessage() {}

func (x *GetLiveByUserIDResp) ProtoReflect() protoreflect.Message {
	mi := &file_live_live_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiveByUserIDResp.ProtoReflect.Descriptor instead.
func (*GetLiveByUserIDResp) Descriptor() ([]byte, []int) {
	return file_live_live_proto_rawDescGZIP(), []int{11}
}

func (x *GetLiveByUserIDResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetLiveByUserIDResp) GetUserLive() *sdk_ws.UserLive {
	if x != nil {
		return x.UserLive
	}
	return nil
}

type StartLiveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID,omitempty"`
	UserID      int64  `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	GroupID     int64  `protobuf:"varint,3,opt,name=groupID,proto3" json:"groupID,omitempty"`
	ChannelID   int64  `protobuf:"varint,4,opt,name=channelID,proto3" json:"channelID,omitempty"`
	ChannelName string `protobuf:"bytes,5,opt,name=channelName,proto3" json:"channelName,omitempty"`
}

func (x *StartLiveReq) Reset() {
	*x = StartLiveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_live_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartLiveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartLiveReq) ProtoMessage() {}

func (x *StartLiveReq) ProtoReflect() protoreflect.Message {
	mi := &file_live_live_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartLiveReq.ProtoReflect.Descriptor instead.
func (*StartLiveReq) Descriptor() ([]byte, []int) {
	return file_live_live_proto_rawDescGZIP(), []int{12}
}

func (x *StartLiveReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *StartLiveReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *StartLiveReq) GetGroupID() int64 {
	if x != nil {
		return x.GroupID
	}
	return 0
}

func (x *StartLiveReq) GetChannelID() int64 {
	if x != nil {
		return x.ChannelID
	}
	return 0
}

func (x *StartLiveReq) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

type StartLiveResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	RtcToken   string      `protobuf:"bytes,2,opt,name=rtcToken,proto3" json:"rtcToken,omitempty"`
}

func (x *StartLiveResp) Reset() {
	*x = StartLiveResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_live_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartLiveResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartLiveResp) ProtoMessage() {}

func (x *StartLiveResp) ProtoReflect() protoreflect.Message {
	mi := &file_live_live_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartLiveResp.ProtoReflect.Descriptor instead.
func (*StartLiveResp) Descriptor() ([]byte, []int) {
	return file_live_live_proto_rawDescGZIP(), []int{13}
}

func (x *StartLiveResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *StartLiveResp) GetRtcToken() string {
	if x != nil {
		return x.RtcToken
	}
	return ""
}

var File_live_live_proto protoreflect.FileDescriptor

var file_live_live_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6c, 0x69, 0x76, 0x65, 0x2f, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x04, 0x6c, 0x69, 0x76, 0x65, 0x1a, 0x28, 0x4f, 0x70, 0x65, 0x6e, 0x2d, 0x49, 0x4d,
	0x2d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x73, 0x64, 0x6b, 0x5f, 0x77, 0x73, 0x2f, 0x77, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x3e, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72,
	0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73,
	0x67, 0x22, 0x70, 0x0a, 0x0c, 0x4c, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x22, 0x9b, 0x01, 0x0a, 0x0b, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d,
	0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55,
	0x52, 0x4c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52,
	0x4c, 0x22, 0xa3, 0x01, 0x0a, 0x0c, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x30, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x76, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x69, 0x76, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x76, 0x65, 0x12, 0x28, 0x0a,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c,
	0x69, 0x76, 0x65, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x65, 0x0a, 0x0b, 0x4c, 0x65, 0x76, 0x65, 0x52,
	0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x50,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44,
	0x22, 0x6d, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x4c, 0x69, 0x76, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22,
	0x40, 0x0a, 0x0c, 0x4c, 0x65, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x30, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x4e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x42, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x22, 0x66, 0x0a, 0x0c, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x22, 0x41, 0x0a, 0x0d, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x0a, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x80, 0x01, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69,
	0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x76, 0x65, 0x22,
	0xa2, 0x01, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5d, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x69, 0x76,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x69, 0x76, 0x65,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x74, 0x63, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x74, 0x63, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x32, 0xdc, 0x02, 0x0a, 0x04, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x31, 0x0a, 0x08,
	0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x11, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x2e,
	0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x6c, 0x69,
	0x76, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x3a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x12, 0x14,
	0x2e, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x08, 0x4c,
	0x65, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x11, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x4c,
	0x65, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x6c, 0x69, 0x76,
	0x65, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x18, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x6c, 0x69,
	0x76, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4c,
	0x69, 0x76, 0x65, 0x12, 0x12, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x4c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x09,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x12, 0x12, 0x2e, 0x6c, 0x69, 0x76, 0x65,
	0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e,
	0x6c, 0x69, 0x76, 0x65, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x42, 0x1d, 0x5a, 0x1b, 0x4f, 0x70, 0x65, 0x6e, 0x5f, 0x49, 0x4d, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x69, 0x76, 0x65, 0x3b, 0x6c, 0x69, 0x76,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_live_live_proto_rawDescOnce sync.Once
	file_live_live_proto_rawDescData = file_live_live_proto_rawDesc
)

func file_live_live_proto_rawDescGZIP() []byte {
	file_live_live_proto_rawDescOnce.Do(func() {
		file_live_live_proto_rawDescData = protoimpl.X.CompressGZIP(file_live_live_proto_rawDescData)
	})
	return file_live_live_proto_rawDescData
}

var file_live_live_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_live_live_proto_goTypes = []interface{}{
	(*CommonResp)(nil),          // 0: live.CommonResp
	(*LiveUserInfo)(nil),        // 1: live.LiveUserInfo
	(*JoinRoomReq)(nil),         // 2: live.JoinRoomReq
	(*JoinRoomResp)(nil),        // 3: live.JoinRoomResp
	(*LeveRoomReq)(nil),         // 4: live.LeveRoomReq
	(*GetRoomUserReq)(nil),      // 5: live.GetRoomUserReq
	(*GetRoomUserResp)(nil),     // 6: live.GetRoomUserResp
	(*LeveRoomResp)(nil),        // 7: live.LeveRoomResp
	(*GetLiveByUserIDReq)(nil),  // 8: live.GetLiveByUserIDReq
	(*CloseLiveReq)(nil),        // 9: live.CloseLiveReq
	(*CloseLiveResp)(nil),       // 10: live.CloseLiveResp
	(*GetLiveByUserIDResp)(nil), // 11: live.GetLiveByUserIDResp
	(*StartLiveReq)(nil),        // 12: live.StartLiveReq
	(*StartLiveResp)(nil),       // 13: live.StartLiveResp
	(*sdk_ws.UserLive)(nil),     // 14: server_api_params.UserLive
}
var file_live_live_proto_depIdxs = []int32{
	0,  // 0: live.JoinRoomResp.CommonResp:type_name -> live.CommonResp
	14, // 1: live.JoinRoomResp.userLive:type_name -> server_api_params.UserLive
	1,  // 2: live.JoinRoomResp.owner:type_name -> live.LiveUserInfo
	0,  // 3: live.GetRoomUserResp.CommonResp:type_name -> live.CommonResp
	1,  // 4: live.GetRoomUserResp.users:type_name -> live.LiveUserInfo
	0,  // 5: live.LeveRoomResp.CommonResp:type_name -> live.CommonResp
	0,  // 6: live.CloseLiveResp.CommonResp:type_name -> live.CommonResp
	0,  // 7: live.GetLiveByUserIDResp.CommonResp:type_name -> live.CommonResp
	14, // 8: live.GetLiveByUserIDResp.userLive:type_name -> server_api_params.UserLive
	0,  // 9: live.StartLiveResp.CommonResp:type_name -> live.CommonResp
	2,  // 10: live.live.JoinRoom:input_type -> live.JoinRoomReq
	5,  // 11: live.live.GetRoomUser:input_type -> live.GetRoomUserReq
	4,  // 12: live.live.LeveRoom:input_type -> live.LeveRoomReq
	8,  // 13: live.live.GetLiveByUserID:input_type -> live.GetLiveByUserIDReq
	12, // 14: live.live.StartLive:input_type -> live.StartLiveReq
	9,  // 15: live.live.CloseLive:input_type -> live.CloseLiveReq
	3,  // 16: live.live.JoinRoom:output_type -> live.JoinRoomResp
	6,  // 17: live.live.GetRoomUser:output_type -> live.GetRoomUserResp
	7,  // 18: live.live.LeveRoom:output_type -> live.LeveRoomResp
	11, // 19: live.live.GetLiveByUserID:output_type -> live.GetLiveByUserIDResp
	13, // 20: live.live.StartLive:output_type -> live.StartLiveResp
	10, // 21: live.live.CloseLive:output_type -> live.CloseLiveResp
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_live_live_proto_init() }
func file_live_live_proto_init() {
	if File_live_live_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_live_live_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_live_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_live_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinRoomReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_live_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinRoomResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_live_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeveRoomReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_live_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_live_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoomUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_live_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeveRoomResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_live_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiveByUserIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_live_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseLiveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_live_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseLiveResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_live_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiveByUserIDResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_live_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartLiveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_live_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartLiveResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_live_live_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_live_live_proto_goTypes,
		DependencyIndexes: file_live_live_proto_depIdxs,
		MessageInfos:      file_live_live_proto_msgTypes,
	}.Build()
	File_live_live_proto = out.File
	file_live_live_proto_rawDesc = nil
	file_live_live_proto_goTypes = nil
	file_live_live_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LiveClient is the client API for Live service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LiveClient interface {
	JoinRoom(ctx context.Context, in *JoinRoomReq, opts ...grpc.CallOption) (*JoinRoomResp, error)
	GetRoomUser(ctx context.Context, in *GetRoomUserReq, opts ...grpc.CallOption) (*GetRoomUserResp, error)
	LeveRoom(ctx context.Context, in *LeveRoomReq, opts ...grpc.CallOption) (*LeveRoomResp, error)
	GetLiveByUserID(ctx context.Context, in *GetLiveByUserIDReq, opts ...grpc.CallOption) (*GetLiveByUserIDResp, error)
	StartLive(ctx context.Context, in *StartLiveReq, opts ...grpc.CallOption) (*StartLiveResp, error)
	CloseLive(ctx context.Context, in *CloseLiveReq, opts ...grpc.CallOption) (*CloseLiveResp, error)
}

type liveClient struct {
	cc grpc.ClientConnInterface
}

func NewLiveClient(cc grpc.ClientConnInterface) LiveClient {
	return &liveClient{cc}
}

func (c *liveClient) JoinRoom(ctx context.Context, in *JoinRoomReq, opts ...grpc.CallOption) (*JoinRoomResp, error) {
	out := new(JoinRoomResp)
	err := c.cc.Invoke(ctx, "/live.live/JoinRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *liveClient) GetRoomUser(ctx context.Context, in *GetRoomUserReq, opts ...grpc.CallOption) (*GetRoomUserResp, error) {
	out := new(GetRoomUserResp)
	err := c.cc.Invoke(ctx, "/live.live/GetRoomUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *liveClient) LeveRoom(ctx context.Context, in *LeveRoomReq, opts ...grpc.CallOption) (*LeveRoomResp, error) {
	out := new(LeveRoomResp)
	err := c.cc.Invoke(ctx, "/live.live/LeveRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *liveClient) GetLiveByUserID(ctx context.Context, in *GetLiveByUserIDReq, opts ...grpc.CallOption) (*GetLiveByUserIDResp, error) {
	out := new(GetLiveByUserIDResp)
	err := c.cc.Invoke(ctx, "/live.live/GetLiveByUserID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *liveClient) StartLive(ctx context.Context, in *StartLiveReq, opts ...grpc.CallOption) (*StartLiveResp, error) {
	out := new(StartLiveResp)
	err := c.cc.Invoke(ctx, "/live.live/StartLive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *liveClient) CloseLive(ctx context.Context, in *CloseLiveReq, opts ...grpc.CallOption) (*CloseLiveResp, error) {
	out := new(CloseLiveResp)
	err := c.cc.Invoke(ctx, "/live.live/CloseLive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LiveServer is the server API for Live service.
type LiveServer interface {
	JoinRoom(context.Context, *JoinRoomReq) (*JoinRoomResp, error)
	GetRoomUser(context.Context, *GetRoomUserReq) (*GetRoomUserResp, error)
	LeveRoom(context.Context, *LeveRoomReq) (*LeveRoomResp, error)
	GetLiveByUserID(context.Context, *GetLiveByUserIDReq) (*GetLiveByUserIDResp, error)
	StartLive(context.Context, *StartLiveReq) (*StartLiveResp, error)
	CloseLive(context.Context, *CloseLiveReq) (*CloseLiveResp, error)
}

// UnimplementedLiveServer can be embedded to have forward compatible implementations.
type UnimplementedLiveServer struct {
}

func (*UnimplementedLiveServer) JoinRoom(context.Context, *JoinRoomReq) (*JoinRoomResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JoinRoom not implemented")
}
func (*UnimplementedLiveServer) GetRoomUser(context.Context, *GetRoomUserReq) (*GetRoomUserResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRoomUser not implemented")
}
func (*UnimplementedLiveServer) LeveRoom(context.Context, *LeveRoomReq) (*LeveRoomResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LeveRoom not implemented")
}
func (*UnimplementedLiveServer) GetLiveByUserID(context.Context, *GetLiveByUserIDReq) (*GetLiveByUserIDResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLiveByUserID not implemented")
}
func (*UnimplementedLiveServer) StartLive(context.Context, *StartLiveReq) (*StartLiveResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartLive not implemented")
}
func (*UnimplementedLiveServer) CloseLive(context.Context, *CloseLiveReq) (*CloseLiveResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CloseLive not implemented")
}

func RegisterLiveServer(s *grpc.Server, srv LiveServer) {
	s.RegisterService(&_Live_serviceDesc, srv)
}

func _Live_JoinRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinRoomReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiveServer).JoinRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/live.live/JoinRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiveServer).JoinRoom(ctx, req.(*JoinRoomReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Live_GetRoomUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRoomUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiveServer).GetRoomUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/live.live/GetRoomUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiveServer).GetRoomUser(ctx, req.(*GetRoomUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Live_LeveRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LeveRoomReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiveServer).LeveRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/live.live/LeveRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiveServer).LeveRoom(ctx, req.(*LeveRoomReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Live_GetLiveByUserID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLiveByUserIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiveServer).GetLiveByUserID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/live.live/GetLiveByUserID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiveServer).GetLiveByUserID(ctx, req.(*GetLiveByUserIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Live_StartLive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartLiveReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiveServer).StartLive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/live.live/StartLive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiveServer).StartLive(ctx, req.(*StartLiveReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Live_CloseLive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseLiveReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LiveServer).CloseLive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/live.live/CloseLive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LiveServer).CloseLive(ctx, req.(*CloseLiveReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Live_serviceDesc = grpc.ServiceDesc{
	ServiceName: "live.live",
	HandlerType: (*LiveServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "JoinRoom",
			Handler:    _Live_JoinRoom_Handler,
		},
		{
			MethodName: "GetRoomUser",
			Handler:    _Live_GetRoomUser_Handler,
		},
		{
			MethodName: "LeveRoom",
			Handler:    _Live_LeveRoom_Handler,
		},
		{
			MethodName: "GetLiveByUserID",
			Handler:    _Live_GetLiveByUserID_Handler,
		},
		{
			MethodName: "StartLive",
			Handler:    _Live_StartLive_Handler,
		},
		{
			MethodName: "CloseLive",
			Handler:    _Live_CloseLive_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "live/live.proto",
}
